{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState(); //from user Sign in , we get the user info\n\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => {\n  async (dispatch, getState) => {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/orders/${orderId}`, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: ORDER_DETAILS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      const message = error.message && error.response.data.message ? error.response.data.message : error.message; // either use in built error message or the general error message (n/w error)\n\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: messge\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/PRITHESH DWIVEDI/OneDrive/Documents/GitHub/E-Commerce/amazon/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","messge"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAAUC,iBAAV,EAA6BC,oBAA7B,EAAmDC,oBAAnD,EAAyEC,kBAAzE,QAAoG,6BAApG;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAAgCJ,QAAQ,EAA9C,CADE,CACkD;;AAEpD,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACtDS,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADjC;AAD6C,KAAjC,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,oBAAR;AAA8BO,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAkB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAXD,CAWE,OAAOC,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,iBADC;AAEPS,MAAAA,OAAO,EACLU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAtBM;AAwBP,OAAO,MAAMC,YAAY,GAAEC,OAAD,IAAW;AACnC,SAAMjB,QAAN,EAAeC,QAAf,KAA0B;AACxBD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACgB,qBAAN;AAA4Bf,MAAAA,OAAO,EAACc;AAApC,KAAD,CAAR;AAEA,UAAM;AAACb,MAAAA,UAAU,EAAC;AAACC,QAAAA;AAAD;AAAZ,QACNJ,QAAQ,EADR;;AAGA,QAAG;AACP,YAAM;AAACK,QAAAA;AAAD,UAAO,MAAMd,KAAK,CAAC2B,GAAN,CAAW,eAAcF,OAAQ,EAAjC,EACnB;AAACT,QAAAA,OAAO,EAAC;AAACC,UAAAA,aAAa,EAAE,UAASJ,QAAQ,CAACK,KAAM;AAAxC;AAAT,OADmB,CAAnB;AAIAV,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACkB,qBAAN;AAA4BjB,QAAAA,OAAO,EAACG;AAApC,OAAD,CAAR;AACC,KANG,CAOA,OAAMO,KAAN,EAAY;AACV,YAAME,OAAO,GACbF,KAAK,CAACE,OAAN,IAAeF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAnC,GACAF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADpB,GAEAF,KAAK,CAACE,OAHN,CADU,CAIe;;AAEzBf,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAACL,kBAAN;AAAyBM,QAAAA,OAAO,EAACkB;AAAjC,OAAD,CAAR;AACD;AAEF,GAtBD;AAuBD,CAxBM","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport {  ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, } from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n  try {\r\n    const { userSignin: { userInfo }, } = getState();   //from user Sign in , we get the user info\r\n\r\n    const { data } = await Axios.post('/api/orders', order, {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n    dispatch({ type: CART_EMPTY });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsOrder=(orderId)=>{\r\n  async(dispatch,getState)=>{\r\n    dispatch({type:ORDER_DETAILS_REQUEST,payload:orderId});\r\n    \r\n    const {userSignin:{userInfo},}=\r\n    getState();\r\n\r\n    try{\r\nconst {data}=await Axios.get(`/api/orders/${orderId}`,\r\n{headers:{Authorization:`Bearer ${userInfo.token}`},\r\n});\r\n\r\ndispatch({type:ORDER_DETAILS_SUCCESS,payload:data});\r\n}\r\n    catch(error){\r\n      const message=\r\n      error.message&&error.response.data.message?\r\n      error.response.data.message:\r\n      error.message;           // either use in built error message or the general error message (n/w error)\r\n  \r\n      dispatch({type:ORDER_DETAILS_FAIL,payload:messge});\r\n    }\r\n    \r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}