{"ast":null,"code":"import { CARD_ADD_ITEM } from \"../constants/cartConstants\";\nexport const cartReducers = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.prolduct ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/PRITHESH DWIVEDI/OneDrive/Documents/GitHub/E-Commerce/amazon/frontend/src/reducers/cartReducers.js"],"names":["CARD_ADD_ITEM","cartReducers","state","cartItems","action","type","item","payload","existItem","find","x","product","map","prolduct"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,OAAO,MAAMC,YAAY,GAAC,CAACC,KAAK,GAAE;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAR,EAAyBC,MAAzB,KAAkC;AAE5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAACF,MAAM,CAACG,OAAlB;AACA,YAAMC,SAAS,GAACN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAAzC,CAAhB;;AAEA,UAAGH,SAAH,EAAa;AACT,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC9BA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACK,QAAtB,GAAgCP,IAAhC,GAAqCI,CAD3B;AAFR,SAAP;AAMH,OAPD,MAQQ;AACA,eAAO,EAAC,GAAGR,KAAJ;AAAUC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAArB,SAAP;AAEP;;AAEL;AACI,aAAOJ,KAAP;AAnBR;AAqBC,CAvBM","sourcesContent":["import { CARD_ADD_ITEM } from \"../constants/cartConstants\";\r\nexport const cartReducers=(state= {cartItems: [] },action)=>{\r\n\r\nswitch(action.type){\r\n    case CARD_ADD_ITEM:\r\n        const item=action.payload;\r\n        const existItem=state.cartItems.find(x=>x.product===item.product);\r\n           \r\n        if(existItem){\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map((x) =>\r\n                 x.product===existItem.prolduct? item:x),\r\n\r\n            };\r\n        }\r\n            else{\r\n                return {...state,cartItems: [...state.cartItems,item]\r\n            };\r\n        }\r\n        \r\n    default:\r\n        return state;\r\n}\r\n};"]},"metadata":{},"sourceType":"module"}