{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../constants/orderConstants\";\nimport Axios from 'axios';\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispath, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSign: {\n        userInfo\n      }\n    } = getState(); //from user Sign in , we get the user info\n\n    const {\n      data\n    } = await Axios.post('/api.orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/PRITHESH DWIVEDI/OneDrive/Documents/GitHub/E-Commerce/amazon/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","Axios","CART_EMPTY","createOrder","order","dispath","getState","dispatch","type","payload","userSign","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,6BAA9E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAO,MAAMC,WAAW,GAAEC,KAAD,IAAS,OAAMC,OAAN,EAAcC,QAAd,KAAyB;AAEvDC,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACT,oBAAN;AAA2BU,IAAAA,OAAO,EAACL;AAAnC,GAAD,CAAR;;AAEA,MAAG;AACC,UAAM;AAACM,MAAAA,QAAQ,EAAC;AAACC,QAAAA;AAAD;AAAV,QAAsBL,QAAQ,EAApC,CADD,CAC0C;;AACxC,UAAM;AAAEM,MAAAA;AAAF,QAAS,MAAMX,KAAK,CAACY,IAAN,CAAW,aAAX,EAAyBT,KAAzB,EAA+B;AAChDU,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASJ,QAAQ,CAACK,KAAM;AADnC;AADwC,KAA/B,CAArB;AAMAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR,oBAAN;AAA2BS,MAAAA,OAAO,EAACG,IAAI,CAACR;AAAxC,KAAD,CAAR;AACAG,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN;AAAN,KAAD,CAAR;AACAe,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACJ,GAXD,CAaA,OAAMC,KAAN,EAAY;AACRZ,IAAAA,QAAQ,CAAC;AACDC,MAAAA,IAAI,EAACV,iBADJ;AAEDW,MAAAA,OAAO,EACPU,KAAK,CAACC,QAAN,IAAgBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApC,GACAF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADpB,GAEAF,KAAK,CAACE;AALL,KAAD,CAAR;AAQH;AACJ,CA3BM","sourcesContent":["import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../constants/orderConstants\"\r\nimport Axios from 'axios';\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nexport const createOrder=(order)=>async(dispath,getState)=>{\r\n    \r\n    dispatch({type:ORDER_CREATE_REQUEST,payload:order});\r\n\r\n    try{\r\n        const {userSign:{userInfo}}=getState();  //from user Sign in , we get the user info\r\n         const { data }=await Axios.post('/api.orders',order,{\r\n             headers:{\r\n                 Authorization:`Bearer ${userInfo.token}`,\r\n             },\r\n         });\r\n\r\n         dispatch({type:ORDER_CREATE_SUCCESS,payload:data.order});\r\n         dispatch({type:CART_EMPTY});\r\n         localStorage.removeItem(\"cartItems\");\r\n    }\r\n\r\n    catch(error){\r\n        dispatch({\r\n                type:ORDER_CREATE_FAIL,\r\n                payload:\r\n                error.response&&error.response.data.message?\r\n                error.response.data.message:\r\n                error.message,\r\n        \r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}